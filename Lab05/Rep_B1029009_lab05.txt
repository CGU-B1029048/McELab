Lab05 Final Report
B1029009簡鈺晴
	Problem description
Display characters according to the button pressed
 
Basic: Display the character pressed at the cursor position.
Bonus 1: Implement the `new-line’ key ◦ Change to the next line if a new-line button is pressed at Line 1 ◦ Scroll the screen if a new-line button is pressed at Line 2.
Bonus 2: Implement the arrow keys (up, down, left, right) ◦ Move the cursor by the arrow key ◦ Insert character at the cursor position.
	Code and explanations 
  
  
This lab also need to send commend and send data to LCD, so we set 0 to commend/ set 1 to data and let D[7:0] separated two part – higher half and lower half. First is set higher half, we need to let data to shift right 4, prepare to status word. When E is enable, it will send out status word. The lower half is as same as below, but don’t need to shift right.
   
  
And also have some basic setting we need to config like the P1 port.Next, the delay will be 20000 to check if LCD is clean. Then, there has initialize to LCD when we restart the code.
Because the basic will use at bonus1 and bonus2, so I explain the code of bonus1 and bouns2.
Bonus1:
  
First, we need to include some .h file and set array is one dimension. Next, we done some basic setting and initialize the array.
Then, we set P2 = 0. When we press the button P2.7 to P2.4, there has some function that we can do. First, P2 == 128 (P2.7) can print A on LCD. And P2 == 64 (P2.6) can print B. P2 == 32 (P2.5) can print C. Above character we use array to record it, so that we can use at change line. Next, P2 == 16 (P2.4) can change the line, so we need to clear the LCD screen and then print that the character that we record before, at last use commend 0xC0 to change the line to second line. 



Here have some tips that the LCD will overflow when the user press the button exceed the screen display, so we have to detect whether input is bigger than 16 and if yes than cannot input any character again.
Bonus 2:
  
First, we need to include some .h file and set array is two dimension. Next, we done some basic setting and initialize the array.
   
Then, we set P2 = 0. When we press the button P2.7 to P2.4, there has some function that we can do. First, P2 == 128 (P2.7) can insert A on LCD. And P2 == 64 (P2.6) can insert B. P2 == 32 (P2.5) can insert C. Above character we will move cursor, so that we can know where cursor it is. Next, P2 == 8(P2.3) and P2 == 4(P2.2) are cursor shift left and shift right, we use commend 0x10 and 0x14 implement those function. Afterward, we implement cursor up and down, which detect current cursor y location to change the line to avoid the line will go to not first or second line. I will interpret the jump_cursor and insert_data below.
The function jump_cursor can locate the position of cursor and display on LCD.


The function insert_data can insert the button that we push to display. Then we need to let the character behind the letter we press to move back. 

So we use k to store the first character behind the letter, and store what the current cursor point to array[a+1] then print out after the insert character. At last, let the original position a+1 store to current can prepare to next character print at LCD cursor position+2. And when current characters are already move in array, the new insert letter will also store in array [current cursor].
	Difficulties you’ve encountered and your solutions 
This time we have encountered a lot of problems.
1.	Board Problem
The C8051 board maybe is too old or otherwise, we have already meet a lot of time from lab3 until now. We always debug on our code, but at last is the board problem. Hope next time we don’t need to change the board again.
2.	Change line overflow
When we try to demo, the assistance find that our code didn’t restrict the range of the array, so when press over 16 time from 0, the character will disappear at LCD and after 24 times it will display in the second row, so we need to restrict the input range to solve this problem. 
3.	When insert data have something wrong.
We meet some problem bonus 2.  When we want to insert data at the cursor position, but LCD always cannot display correct characters behind insert data. After we think about the running logical and ask assistant help and had solved this problem.
	Discussions or what you have learned
This lab learn about how LCD use and also know about a lot of commend can use in LCD. I also learn more about C array with for loop using. Hope I can done more quickly when I encounter the similar question. On the other hand, the board wish no more failure again.  
